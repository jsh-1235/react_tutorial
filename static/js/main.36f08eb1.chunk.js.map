{"version":3,"sources":["pages/Home.js","pages/SpeedDials.js","pages/Ratings.js","pages/NotFount.js","App.js","serviceWorker.js","index.js"],"names":["Home","useStyles","makeStyles","theme","root","transform","flexGrow","exampleWrapper","position","marginTop","spacing","height","radioGroup","margin","speedDial","bottom","right","top","left","actions","icon","name","SpeedDials","classes","React","useState","direction","setDirection","open","setOpen","hidden","setHidden","handleClose","className","FormControlLabel","control","Switch","checked","onChange","event","target","color","label","FormLabel","component","RadioGroup","aria-label","value","row","Radio","SpeedDial","ariaLabel","SpeedDialIcon","onClose","onOpen","map","action","SpeedDialAction","key","tooltipTitle","onClick","Ratings","setValue","Box","mb","borderColor","Typography","Rating","newValue","readOnly","disabled","NotFound","createMuiTheme","palette","primary","main","green","secondary","orange","header","padding","footer","width","menuButton","marginRight","title","linkButton","list","fullList","App","state","setState","toggleDrawer","anchor","type","ThemeProvider","AppBar","Toolbar","IconButton","edge","variant","to","Button","Fragment","Drawer","clsx","role","onKeyDown","List","text","index","ListItem","button","ListItemIcon","ListItemText","Divider","exact","path","BottomNavigation","alert","BottomNavigationAction","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36f08eb1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    transform: \"translateZ(0px)\",\r\n    flexGrow: 1,\r\n  },\r\n  exampleWrapper: {\r\n    position: \"relative\",\r\n    marginTop: theme.spacing(3),\r\n    height: 380,\r\n  },\r\n  radioGroup: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  speedDial: {\r\n    position: \"absolute\",\r\n    \"&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft\": {\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n    \"&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight\": {\r\n      top: theme.spacing(2),\r\n      left: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  { icon: <FileCopyIcon />, name: \"Copy\" },\r\n  { icon: <SaveIcon />, name: \"Save\" },\r\n  { icon: <PrintIcon />, name: \"Print\" },\r\n  { icon: <ShareIcon />, name: \"Share\" },\r\n  { icon: <FavoriteIcon />, name: \"Like\" },\r\n];\r\n\r\nconst SpeedDials = () => {\r\n  const classes = useStyles();\r\n  const [direction, setDirection] = React.useState(\"up\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [hidden, setHidden] = React.useState(false);\r\n\r\n  const handleDirectionChange = (event) => {\r\n    setDirection(event.target.value);\r\n  };\r\n\r\n  const handleHiddenChange = (event) => {\r\n    setHidden(event.target.checked);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControlLabel control={<Switch checked={hidden} onChange={handleHiddenChange} color=\"primary\" />} label=\"Hidden\" />\r\n      <FormLabel className={classes.radioGroup} component=\"legend\">\r\n        Direction\r\n      </FormLabel>\r\n      <RadioGroup aria-label=\"direction\" name=\"direction\" value={direction} onChange={handleDirectionChange} row>\r\n        <FormControlLabel value=\"up\" control={<Radio />} label=\"Up\" />\r\n        <FormControlLabel value=\"right\" control={<Radio />} label=\"Right\" />\r\n        <FormControlLabel value=\"down\" control={<Radio />} label=\"Down\" />\r\n        <FormControlLabel value=\"left\" control={<Radio />} label=\"Left\" />\r\n      </RadioGroup>\r\n      <div className={classes.exampleWrapper}>\r\n        <SpeedDial ariaLabel=\"SpeedDial example\" className={classes.speedDial} hidden={hidden} icon={<SpeedDialIcon />} onClose={handleClose} onOpen={handleOpen} open={open} direction={direction}>\r\n          {actions.map((action) => (\r\n            <SpeedDialAction key={action.name} icon={action.icon} tooltipTitle={action.name} onClick={handleClose} />\r\n          ))}\r\n        </SpeedDial>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeedDials;\r\n","import React from \"react\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst Ratings = () => {\r\n  const [value, setValue] = React.useState(2);\r\n\r\n  return (\r\n    <div>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Controlled</Typography>\r\n        <Rating\r\n          name=\"simple-controlled\"\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n        />\r\n      </Box>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Read only</Typography>\r\n        <Rating name=\"read-only\" value={value} readOnly />\r\n      </Box>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Disabled</Typography>\r\n        <Rating name=\"disabled\" value={value} disabled />\r\n      </Box>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Pristine</Typography>\r\n        <Rating name=\"pristine\" value={null} />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ratings;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h2>Not Found</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport SpeedDials from \"./pages/SpeedDials\";\nimport Ratings from \"./pages/Ratings\";\nimport NotFound from \"./pages/NotFount\";\n\n//==================================================================\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { green, orange } from \"@material-ui/core/colors\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport clsx from \"clsx\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: green[500],\n    },\n    secondary: {\n      main: orange[500],\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    flexGrow: 1,\n  },\n  main: {\n    flexGrow: 1,  \n    padding: \"10px\",\n  },\n  footer: {\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    width: \"100%\",\n    padding: \"0px\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  linkButton: {\n    marginRight: theme.spacing(2),\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n    setState({\n      ...state,\n      [anchor]: open,\n    });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  const [value, setValue] = React.useState(\"recents\");\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    // console.info(newValue);\n    alert(newValue);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <header>\n          <AppBar position=\"static\" className={classes.header}>\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Menu\n              </Typography>\n              <Link color=\"inherit\" to=\"/\">\n                <Button variant=\"outlined\" className={classes.linkButton}>\n                  Home\n                </Button>\n              </Link>\n              <Link color=\"inherit\" to=\"/speeddials\">\n                <Button variant=\"outlined\" className={classes.linkButton}>\n                  Speed Dial\n                </Button>\n              </Link>\n              <Link color=\"inherit\" to=\"/ratings\">\n                <Button variant=\"outlined\" className={classes.linkButton}>\n                  Rating\n                </Button>\n              </Link>\n            </Toolbar>\n          </AppBar>\n        </header>\n\n        <div>\n          {[\"left\", \"right\", \"top\", \"bottom\"].map((anchor) => (\n            <React.Fragment key={anchor}>\n              <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n              <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                {list(anchor)}\n              </Drawer>\n            </React.Fragment>\n          ))}\n        </div>\n\n        <main className={classes.main}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/speeddials\" component={SpeedDials} />\n            <Route path=\"/ratings\" component={Ratings} />\n            <Route component={NotFound} />\n          </Switch>\n        </main>\n        <footer className={classes.footer}>\n          <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n            <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\n            <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\n            <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n            <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n          </BottomNavigation>\n        </footer>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n// 다른 주소에 따라 다른 뷰를 보여주는것을 라우팅 이라고 한다.\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}